{"version":3,"sources":["assets/theme/theme.tsx","modules/shared/SidebarData.tsx","modules/shared/DrawerBar.tsx","modules/users/views/CardItem.tsx","services/config/axios-setup.tsx","services/users/users.tsx","components/CustomModal.tsx","UserContext.tsx","modules/users/views/UserList.tsx","components/InputText.tsx","modules/users/views/InnerForm.tsx","modules/users/FormValidators.tsx","components/Spinner.tsx","modules/users/views/UserForm.tsx","modules/about/About.tsx","App.tsx","index.tsx"],"names":["themeApp","createMuiTheme","palette","type","primary","light","main","dark","secondary","SidebarData","title","path","icon","Group","PersonAdd","Info","useStyle","makeStyles","theme","appBar","zIndex","drawer","width","flexShrink","drawerPaper","drawerContainer","overflow","DrawerBar","history","useHistory","classes","CssBaseline","AppBar","position","className","Toolbar","Typography","variant","noWrap","Drawer","paper","List","map","item","ListItem","button","onClick","push","ListItemIcon","ListItemText","useStyles","createStyles","root","maxWidth","media","height","CardItem","props","user","handleDelete","handleUpdate","handleClick","Card","CardActionArea","CardMedia","component","image","img","CardContent","gutterBottom","first_name","last_name","color","email","CardActions","disableSpacing","IconButton","aria-label","Edit","uid","Delete","AXIOS_SERVICE","axios","create","responseType","interceptors","request","use","config","a","baseURL","headers","error","Promise","reject","axiosInstance","card","backgroundColor","background","header","textAlign","fontSize","CustomModal","open","handleClose","node","sizeOverride","avatar","React","useState","top","left","transform","customStyle","body","style","CardHeader","Button","size","Modal","onClose","UserContext","createContext","user_name","phone","updateUser","Consumer","Provider","large","spacing","UserList","useContext","users","setUsers","setOpen","robot","setRobot","useEffect","offset","get","then","resp","catch","err","getAllUsers","usuarios","data","console","log","id","delete","deleteUser","filter","roboAvatar","Grid","container","alignContent","justify","Avatar","alt","src","Email","Person","Phone","Today","created","toString","split","xs","sm","errorlabel","InputText","value","label","change","TextField","fullWidth","onChange","InputProps","REG_EMAIL","REG_PHON","FormControl","withFormik","mapPropsToValues","validateOnChange","validate","values","errors","trim","length","test","handleSubmit","actions","setSubmitting","submitHandler","handleChange","isSubmitting","noValidate","direction","md","disabled","FormValidators","backdrop","fontFamily","Spinner","message","Backdrop","CircularProgress","UserForm","action","showSpinner","setShowSpinner","post","createUser","response","put","Divider","Container","marginRight","heroContent","padding","heroButtons","marginTop","About","align","paragraph","Link","href","display","content","flexGrow","App","setUser","userContextValues","exact","render","ReactDOM","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.92de567d.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\n\n\nexport const themeApp = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            light: '#4dabf5',\n            main: '#2196f3',\n            dark: '#1769aa',\n        },\n        secondary: {\n            light: '#f73378',\n            main: '#f50057',\n            dark: '#ab003c'\n        }\n    }\n});","import { Info, Group, PersonAdd } from '@material-ui/icons';\n\nexport const SidebarData = [\n    {\n        title: 'Todos',\n        path: '/',\n        icon: <Group />,\n    },\n    {\n        title: 'Nuevo',\n        path: '/new',\n        icon: <PersonAdd />,\n    },\n    {\n        title: 'About',\n        path: '/about',\n        icon: <Info />,\n    }\n]","import React from 'react'\nimport { AppBar, CssBaseline, Drawer, List, ListItem, ListItemIcon, ListItemText, makeStyles, Theme, Toolbar, Typography } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom';\nimport { SidebarData } from './SidebarData';\n\nconst drawerWidth = 200;\n\nconst useStyle = makeStyles((theme: Theme) => ({\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerContainer: {\n        overflow: 'auto',\n    },\n}));\n\nexport const DrawerBar = () => {\n\n    let history = useHistory();\n\n    const classes = useStyle();\n\n    return (\n        <>\n            <CssBaseline />\n            {/* AppBar */}\n            <AppBar\n                position=\"fixed\"\n                className={classes.appBar}>\n                <Toolbar>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap>\n                        RoboUsers\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n\n            {/* Drawer */}\n            <Drawer\n                variant=\"permanent\"\n                className={classes.drawer}\n                classes={{ paper: classes.drawerPaper }}>\n                <Toolbar />\n                <div className={classes.drawerContainer}>\n                    <List>\n                        {\n                            SidebarData.map((item) => {\n                                const { title, icon, path } = item;\n                                return (\n                                    <ListItem key={title} button onClick={() => history.push(path)}>\n                                        <ListItemIcon>\n                                            {icon}\n                                        </ListItemIcon>\n                                        <ListItemText primary={title} />\n                                    </ListItem>\n                                )\n                            })\n                        }\n                    </List>\n                </div>\n            </Drawer>\n        </>\n    )\n}\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { Delete, Edit } from '@material-ui/icons';\nimport { Card, CardMedia, CardContent, CardActions, IconButton, Typography, CardActionArea } from '@material-ui/core';\nimport { User } from '../UserValues';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            maxWidth: 345,\n        },\n        media: {\n            height: 'auto',\n        }\n    }),\n);\n\ntype Props = {\n    user: User;\n    handleUpdate: any;\n    handleDelete: any;\n    handleClick: any;\n}\n\nexport default function CardItem(props: Props) {\n    const classes = useStyles();\n    const { user, handleDelete, handleUpdate, handleClick } = props;\n\n    return (\n        <Card className={classes.root}>\n            <CardActionArea onClick={() => handleClick(user)}>\n                <CardMedia\n                    component=\"img\"\n                    className={classes.media}\n                    image={user.img}\n                    title={user.img}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {`${user.first_name} ${user.last_name}`}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {user.email}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            {/* Buttons */}\n            <CardActions disableSpacing>\n                <IconButton aria-label=\"edit\" onClick={() => handleUpdate(user)}>\n                    <Edit />\n                </IconButton>\n                <IconButton aria-label=\"delete\" onClick={() => handleDelete(user.uid)}>\n                    <Delete />\n                </IconButton>\n            </CardActions>\n        </Card>\n    );\n}\n","import axios, { AxiosInstance } from \"axios\";\n\nconst DEV_URL = 'http://localhost:3001/api';\nconst BASE_URL = 'https://react-robouser.herokuapp.com/api';\n\nexport const AXIOS_SERVICE: AxiosInstance = axios.create({\n    responseType: 'json'\n});\n\nAXIOS_SERVICE.interceptors.request.use(\n    async (config) => {\n        config.baseURL = BASE_URL;\n        config.headers = {\n            'Accept': 'application/json',\n            'Content-type': 'application/json',\n            'Access-Control-Allow-Origin': '*'\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);","import { User } from \"modules/users/UserValues\";\nimport { AXIOS_SERVICE } from \"services/config/axios-setup\";\n\nconst axiosInstance = AXIOS_SERVICE;\n\nexport const getAllUsers = (offset: number = 0) => {\n    return axiosInstance.get(`/usuarios?desde=${offset}`)\n        .then(resp => resp)\n        .catch(err => err);\n}\n\nexport const createUser = (user: User) => {\n    return axiosInstance.post(`/usuarios`, user)\n        .then(resp => resp)\n        .catch(err => err);\n}\n\nexport const updateUser = (user: User, id: string) => {\n    return axiosInstance.put(`/usuarios/${id}`, user)\n        .then(resp => resp)\n        .catch(err => err);\n}\n\nexport const deleteUser = (id: string) => {\n    return axiosInstance.delete(`/usuarios/${id}`)\n        .then(resp => resp)\n        .catch(err => err);\n}","import { Button, Card, CardActions, CardContent, CardHeader, createStyles, makeStyles, Modal, Theme } from '@material-ui/core';\nimport React from 'react'\n\ntype Props = {\n    title: string;\n    open: boolean;\n    handleClose: () => void;\n    node: JSX.Element;\n    sizeOverride?: number;\n    avatar?: JSX.Element;\n}\n\nfunction modalStyle(width: number) {\n    return {\n        width: `${width}%`,\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n    }\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    card: {\n        maxWidth: 400,\n        position: 'absolute',\n        backgroundColor: theme.palette.background.paper\n    },\n    header: {\n        textAlign: 'center',\n        fontSize: '2rem !important',\n    }\n}));\n\nexport default function CustomModal(props: Props) {\n\n    const { title, open, handleClose, node, sizeOverride, avatar } = props;\n    const [customStyle] = React.useState(modalStyle(sizeOverride ? sizeOverride : 50));\n    const classes = useStyles();\n\n\n    const body = (\n        <Card style={customStyle} className={classes.card}>\n            <CardHeader\n                title={title}\n                avatar={\n                    avatar\n                }\n                classes={{ title: classes.header }}\n            />\n            <CardContent>\n                {node}\n            </CardContent>\n            <CardActions>\n                <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={handleClose}>Cerrar</Button>\n            </CardActions>\n        </Card>\n    );\n\n    return (\n        <div className=\"app-modal\">\n            <Modal\n                open={open}\n                onClose={handleClose}\n            >\n                {body}\n            </Modal>\n        </div>\n    );\n}","import { User } from \"modules/users/UserValues\";\nimport { createContext } from \"react\";\n\nexport interface IUserProps {\n    user: User;\n    updateUser: (user: User) => void;\n}\n\nconst UserContext = createContext<IUserProps>({\n    user: {\n        first_name: '',\n        last_name: '',\n        user_name: '',\n        email: '',\n        phone: ''\n    },\n    updateUser: (user: User) => { }\n});\n\nexport const UserContextConsumer = UserContext.Consumer;\nexport const UserContextProvider = UserContext.Provider;\n\nexport default UserContext;","import React, { useContext, useEffect, useState } from 'react'\nimport { Avatar, createStyles, Grid, List, ListItem, ListItemIcon, ListItemText, makeStyles, Theme } from '@material-ui/core';\nimport CardItem from './CardItem';\nimport { deleteUser, getAllUsers } from 'services/users/users';\nimport { User } from '../UserValues';\nimport CustomModal from 'components/CustomModal';\nimport { Email, Person, Phone, Today } from '@material-ui/icons';\nimport UserContext from 'UserContext';\nimport { useHistory } from 'react-router';\n\ntype Props = {\n\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        large: {\n            width: theme.spacing(7),\n            height: theme.spacing(7),\n        },\n    }),\n);\n\nexport const UserList = (props: Props) => {\n    let history = useHistory();\n\n    const classes = useStyles();\n\n    const { updateUser } = useContext(UserContext);\n    const [users, setUsers] = useState<User[]>([]);\n    const [open, setOpen] = React.useState<boolean>(false);\n    const [robot, setRobot] = useState<User>({\n        last_name: '',\n        first_name: '',\n        user_name: '',\n        phone: '',\n        email: ''\n    });\n\n    useEffect(() => {\n        getAllUsers().then(({ data }) => {\n            const { usuarios } = data;\n            setUsers(usuarios);\n        }).catch((err) => {\n            console.log(err);\n        });\n\n        return () => {\n        }\n\n    }, []);\n\n    const handleDelete = (id: string) => {\n        deleteUser(id).then(() => {\n            setUsers(users.filter((user) => user.uid !== id));\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    const handleClick = (user: User) => {\n        setRobot(user);\n        setOpen(true);\n    }\n\n    const handleUpdate = (user: User) => {\n        updateUser(user);\n        history.push('/update');\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    const roboAvatar = (\n        <Grid container spacing={2} alignContent=\"center\" justify=\"center\">\n            <Avatar alt=\"RoboUser\" src={`${robot.img}`} className={classes.large} />\n        </Grid>\n    );\n\n    const body = (\n        <Grid container spacing={2} alignContent=\"center\" justify=\"center\">\n            <List>\n                <ListItem>\n                    <ListItemIcon>\n                        <Email />\n                    </ListItemIcon>\n                    <ListItemText primary={robot.email} />\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <Person />\n                    </ListItemIcon>\n                    <ListItemText primary={robot.user_name} />\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <Phone />\n                    </ListItemIcon>\n                    <ListItemText primary={robot.phone} />\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <Today />\n                    </ListItemIcon>\n                    <ListItemText primary={robot.created && robot.created.toString().split('T')[0]} />\n                </ListItem>\n            </List>\n        </Grid>\n    );\n\n\n    return (\n        <>\n            <Grid container spacing={4}>\n                {\n                    users.map((user) => {\n                        const { uid } = user;\n                        return (\n                            <Grid item xs={12} sm={3} key={uid} className=\"animate__animated animate__fadeIn animate__faster\">\n                                <CardItem\n                                    user={user}\n                                    handleClick={handleClick}\n                                    handleDelete={handleDelete}\n                                    handleUpdate={handleUpdate}\n                                />\n                            </Grid>\n                        )\n                    })\n                }\n            </Grid>\n            { open &&\n                <CustomModal\n                    title={`${robot.first_name} ${robot.last_name}`}\n                    open={open}\n                    handleClose={handleClose}\n                    node={body}\n                    sizeOverride={80}\n                    avatar={roboAvatar}\n                />\n            }\n        </>\n    )\n}\n","import { createStyles, makeStyles, TextField, Theme } from '@material-ui/core';\nimport React from 'react'\n\ntype Props = {\n    id: string;\n    value: string;\n    label: string;\n    error: boolean;\n    change: (eventOrPath: string | React.ChangeEvent<any>) => void | ((eventOrTextValue: string | React.ChangeEvent<any>) => void);\n}\n\nconst useStyles = makeStyles(\n    (theme: Theme) => createStyles(\n        {\n            error: {\n                backgroundColor: '#FDE8E8'\n            },\n            errorlabel: {\n                color: 'black !important'\n            }\n        }\n    )\n);\n\nexport const InputText = (props: Props) => {\n    const classes = useStyles();\n    const { id, value, label, error, change } = props;\n\n    return (\n        <div className='app-input'>\n            <TextField\n                fullWidth\n                id={id}\n                variant='outlined'\n                size='small'\n                label={label}\n                onChange={change}\n                error={error}\n                InputProps={\n                    {\n                        classes: {\n                            error: classes.error\n                        }\n                    }\n                }\n                value={value}\n            />\n        </div>\n    );\n}\n","import React from 'react'\nimport { Avatar, Button, createStyles, Grid, makeStyles, Theme } from '@material-ui/core'\nimport { InputText } from 'components/InputText'\nimport { Field, Form, FormikProps } from 'formik'\nimport { User } from '../UserValues'\n\ntype Props = {}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    large: {\n        width: theme.spacing(20),\n        height: theme.spacing(20),\n    },\n}));\n\nexport const InnerForm = (props: Props & FormikProps<User>) => {\n    const classes = useStyles();\n    const { handleChange, values, errors, isSubmitting } = props;\n\n    return (\n        <div className=\"user-form\">\n            <Form noValidate >\n                <Grid container spacing={2} alignContent=\"center\" justify=\"center\">\n                    <Grid item>\n                        {/* imagen */}\n                        <Avatar alt=\"Robo user\" src={`https://robohash.org/0${values.first_name}.png?size=200x200&set=set1`} className={classes.large} />\n                    </Grid>\n                    <Grid item xs={12} sm container direction=\"column\" spacing={2}>\n\n                        <Grid item xs={8} sm={6} md={8}>\n                            <Field\n                                type=\"text\"\n                                id=\"first_name\"\n                                component={InputText}\n                                change={handleChange}\n                                label=\"Nombre(s)\"\n                                value={values.first_name}\n                                error={!!errors.first_name}\n                            />\n                            {errors.first_name && `${errors.first_name} `}\n                        </Grid>\n                        <Grid item xs={8} sm={6} md={8}>\n                            <Field\n                                type=\"text\"\n                                id=\"last_name\"\n                                component={InputText}\n                                change={handleChange}\n                                label=\"Apellido(s)\"\n                                value={values.last_name}\n                                error={!!errors.last_name}\n                            />\n                            {errors.last_name && `${errors.last_name} `}\n                        </Grid>\n                        <Grid item xs={8} sm={6} md={8}>\n                            <Field\n                                type=\"email\"\n                                id=\"email\"\n                                component={InputText}\n                                change={handleChange}\n                                label=\"Email\"\n                                value={values.email}\n                                error={!!errors.email}\n                            />\n                            {errors.email && `${errors.email} `}\n                        </Grid>\n                        <Grid item xs={8} sm={6} md={8}>\n                            <Field\n                                type=\"text\"\n                                id=\"user_name\"\n                                component={InputText}\n                                change={handleChange}\n                                label=\"Nickname\"\n                                value={values.user_name}\n                                error={!!errors.user_name}\n                            />\n                            {errors.user_name && `${errors.user_name} `}\n                        </Grid>\n                        <Grid item xs={8} sm={6} md={8}>\n                            <Field\n                                type=\"text\"\n                                id=\"phone\"\n                                component={InputText}\n                                change={handleChange}\n                                label=\"Teléfono\"\n                                value={values.phone}\n                                error={!!errors.phone}\n                            />\n                            {errors.phone && `${errors.phone} `}\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={2} direction=\"row\" alignContent=\"center\" justify=\"center\">\n                    <Grid item xs={8} sm={6} md={8}>\n                        <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color=\"primary\">\n                            Guardar\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Form>\n        </div>\n    )\n}\n","import React from 'react'\nimport { FormikErrors, withFormik } from 'formik';\nimport { User } from './UserValues';\nimport { InnerForm } from './views/InnerForm';\n\nconst REG_EMAIL = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\nconst REG_PHON = /\\(?\\d+\\)?[-.\\s]?\\d+[-.\\s]?\\d/;\n\ntype Props = {\n    submitHandler: any;\n    user?: User;\n}\n\nconst FormControl = withFormik<Props, User>({\n    mapPropsToValues: props => {\n\n        return {\n            first_name: props.user?.first_name || '',\n            last_name: props.user?.last_name || '',\n            email: props.user?.email || '',\n            phone: props.user?.phone || '',\n            user_name: props.user?.user_name || ''\n        }\n    },\n    validateOnChange: true,\n    validate: (values: User) => {\n        let errors: FormikErrors<User> = {};\n\n        if (values.first_name.trim().length < 2) {\n            errors.first_name = 'Longitud insuficiente';\n        }\n        if (values.last_name.trim().length < 2) {\n            errors.last_name = 'Longitud insuficiente';\n        }\n        if ((values.email && !REG_EMAIL.test(values.email)) || values.email.trim().length < 1) {\n            errors.email = 'Formato de Email incorrecto';\n        }\n        if ((values.phone && !REG_PHON.test(values.phone)) || values.phone.trim().length < 1) {\n            errors.phone = 'Formato de Tel\\u00E9fono incorrecto. Aceptados: (555) 444-6789 | 555-444-6789 | 555.444.6789 | 555 444 6789';\n        }\n        if (values.user_name.trim().length < 2) {\n            errors.user_name = 'Longitud insuficiente';\n        }\n\n        return errors;\n    },\n    handleSubmit: (values, actions) => {\n        actions.setSubmitting(false);\n        actions.props.submitHandler(values);\n    }\n})(InnerForm);\n\nexport const FormValidators = (props: Props) => {\n    const { submitHandler, user } = props;\n    return (\n        <div className=\"form-validators\">\n            <FormControl submitHandler={submitHandler} user={user} />\n        </div>\n    )\n}\n","import React from 'react'\nimport { Backdrop, CircularProgress, createStyles, Grid, makeStyles, Theme } from '@material-ui/core';\n\ntype Props = {\n    open: boolean;\n    message: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            position: 'relative'\n        },\n        backdrop: {\n            zIndex: theme.zIndex.drawer + 1,\n            color: '#fff',\n        },\n        label: {\n            fontFamily: 'sans-serif',\n            fontSize: '2rem !important'\n        }\n    }),\n);\n\n\nexport const Spinner = (props: Props) => {\n    const { open, message } = props;\n    const classes = useStyles();\n\n    return (\n        <div className='app-spinner'>\n            <Backdrop className={classes.backdrop} open={open}>\n                <Grid container spacing={2} alignContent=\"center\" justify=\"center\">\n                    <Grid item xs={12} sm={12} md={12}>\n                        <CircularProgress color=\"inherit\" />\n                    </Grid>\n                </Grid>\n                <Grid container spacing={2} alignContent=\"center\" justify=\"center\">\n                    <Grid item xs={12} sm={12} md={12}>\n                        <div className={classes.label}>\n                            <p>{message}</p>\n                        </div>\n                    </Grid>\n                </Grid>\n            </Backdrop>\n        </div>\n    );\n}\n","import React, { useContext } from 'react'\nimport { Container, Divider, Toolbar, Typography } from '@material-ui/core'\nimport { User } from '../UserValues'\nimport { FormValidators } from '../FormValidators'\nimport { Spinner } from 'components/Spinner'\nimport { createUser, updateUser } from 'services/users/users'\nimport UserContext from 'UserContext'\n\ntype Props = {\n    action: string;\n    user?: User;\n}\n\n\nexport const UserForm = (props: Props) => {\n    const { action: title } = props;\n    const [showSpinner, setShowSpinner] = React.useState<boolean>(false);\n    const { user } = useContext(UserContext)\n\n    const submitHandler = (values: User) => {\n        setShowSpinner(true);\n        console.log(values);\n\n        switch (title) {\n            case 'Nuevo':\n\n                createUser(values).then((response) => {\n                    console.log(response);\n                    setShowSpinner(false);\n                }).catch((err) => {\n                    console.log(err);\n                });\n                break;\n            case 'Editar':\n                updateUser(values, user.uid || '').then((response) => {\n                    console.log(response);\n                    setShowSpinner(false);\n                }).catch((err) => {\n                    console.log(err);\n\n                });\n                break;\n        }\n    }\n\n    return (\n        <div>\n            <Typography variant=\"h2\">\n                {title}\n            </Typography>\n            <Divider />\n            <Toolbar />\n            <Container >\n                {\n                    (user && title === 'Editar')\n                        ? <FormValidators submitHandler={submitHandler} user={user} />\n                        : <FormValidators submitHandler={submitHandler} />\n                }\n            </Container>\n            {\n                showSpinner &&\n                <Spinner\n                    open={showSpinner}\n                    message=\"Cargando\"\n                />\n            }\n        </div>\n    )\n}\n","import { Button, Container, Grid, Link, makeStyles, Theme, Typography } from '@material-ui/core';\nimport React from 'react'\nimport { useHistory } from 'react-router';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n}));\n\nexport const About = () => {\n\n    const classes = useStyles();\n    let history = useHistory();\n\n    return (\n        <main>\n            <div className={classes.heroContent}>\n                <Container maxWidth=\"sm\">\n                    <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                        About\n                    </Typography>\n                    <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                        CRUD de Usuarios creados aleatoriamente con la herramienta <Link href=\"https://www.mockaroo.com/\">Mockaroo</Link>, con el fin de tener una base de datos Inicial para la obtención de datos.\n                        La API REST a la que se hacen Request a través de AXIOS está creada en NodeJs en conjunto con Express.\n                     </Typography>\n                    <div className={classes.heroButtons}>\n                        <Grid container spacing={2} justify=\"center\">\n                            <Grid item>\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => history.push('/')}>\n                                    Lista de RoboUsers\n                                </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button variant=\"outlined\" color=\"primary\" onClick={() => history.push('/new')}>\n                                    Crear nuevo RoboUser\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </Container>\n            </div>\n        </main>\n    )\n}\n","import React, { useState } from 'react';\nimport { makeStyles, Theme, Toolbar } from '@material-ui/core';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { DrawerBar } from 'modules/shared/DrawerBar';\nimport { UserList } from 'modules/users/views/UserList';\nimport { UserForm } from 'modules/users/views/UserForm';\nimport UserContext from 'UserContext';\nimport { User } from 'modules/users/UserValues';\nimport { About } from 'modules/about/About';\n\nconst useStyle = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'flex'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction App() {\n\n  const classes = useStyle();\n  const [user, setUser] = useState<User>({\n    first_name: '',\n    last_name: '',\n    user_name: '',\n    email: '',\n    phone: ''\n  });\n\n  const updateUser = (user: User) => {\n    setUser(user);\n  }\n\n  const userContextValues = {\n    user,\n    updateUser\n  }\n\n  return (\n    <UserContext.Provider value={userContextValues}>\n      <Router>\n        <div className={classes.root}>\n          {/* AppBar & Drawer */}\n          <DrawerBar />\n\n          <main className={classes.content}>\n            <Toolbar />\n            <Switch>\n              <Route exact path=\"/\" render={props => <UserList />} />\n              <Route exact path=\"/new\" render={props => <UserForm action=\"Nuevo\" />} />\n              <Route exact path=\"/update\" render={props => <UserForm action=\"Editar\" />} />\n              <Route exact path=\"/about\" render={props => <About />} />\n            </Switch>\n          </main>\n        </div>\n      </Router>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","import { ThemeProvider } from '@material-ui/styles';\nimport { themeApp } from 'assets/theme/theme';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\n  <ThemeProvider theme={themeApp}>\n    <App />\n  </ThemeProvider>,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}